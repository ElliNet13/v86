name: CI

on:
  push:
    branches:
      - "master"  # Trigger on pushes to master
  workflow_dispatch:  # Allows manual runs

permissions:
  contents: read  # Read permissions for repo content
  pages: write    # Write permissions for Pages deployment
  id-token: write # Necessary for secure deployments

concurrency:
  group: "pages-deployment"
  cancel-in-progress: false  # Avoids canceling in-progress runs

jobs:
  eslint:
    name: Run ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install ESLint and run checks
        run: |
          sudo npm install -g eslint
          make eslint

  test:
    runs-on: ubuntu-latest
    name: Build and Test Workflow
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          check-latest: true

      - name: Setup Rust toolchain
        run: |
          rustup toolchain install stable --profile minimal
          rustup target add wasm32-unknown-unknown
          rustup component add rustfmt

      - name: Install required APT packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y nasm gdb qemu-system-x86 libc6-dev-i386

      - name: Build and run debug builds
        run: |
          make all-debug
          make all
          make build/v86-fallback.wasm

      - name: Check rustfmt
        run: make rustfmt

      - name: Cache kvm-unit-test build
        uses: actions/cache@v3
        id: cache-kvm-unit-test
        with:
          path: tests/kvm-unit-tests/
          key: ${{ runner.os }}-kvm-unit-test

      - name: Build kvm-unit-test if cache miss
        if: steps.cache-kvm-unit-test.outputs.cache-hit != 'true'
        run: |
          cd tests/kvm-unit-tests && ./configure && make x86/realmode.flat

      - name: Run kvm-unit-test
        run: tests/kvm-unit-tests/run.js tests/kvm-unit-tests/x86/realmode.flat

      - name: Cache nasm tests
        uses: actions/cache@v3
        id: cache-nasmtests
        with:
          path: tests/nasm/build/
          key: ${{ runner.os }}-nasmtests

      - name: Run nasm tests
        run: |
          MAX_PARALLEL_TESTS=4 make nasmtests
          MAX_PARALLEL_TESTS=4 make nasmtests-force-jit

      - name: Run rust tests
        run: make rust-test

      - name: Cache images
        uses: actions/cache@v3
        id: cache-images
        with:
          path: images/
          key: ${{ runner.os }}-images-v2

      - name: Download missing images if cache miss
        if: steps.cache-images.outputs.cache-hit != 'true'
        run: |
          wget -nv -P images/ https://i.copy.sh/{linux.iso,linux3.iso,linux4.iso,buildroot-bzimage68.bin,TinyCore-11.0.iso,oberon.img,msdos.img,openbsd-floppy.img,kolibri.img,windows101.img,os8.img,freedos722.img,mobius-fd-release5.img}

      - name: Run API tests
        run: make api-tests

      - name: Run qemu tests
        run: |
          make qemutests
          make qemutests-release

      - name: Run additional tests
        run: |
          make jitpagingtests
          MAX_PARALLEL_TESTS=1 make tests
          make devices-test
          make expect-tests

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: v86
          path: |
            build/libv86*.js
            build/libv86*.js.map
            build/v86*.wasm

  deploy:
    name: Upload and Release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: v86
          path: build

      - name: Verify downloaded structure
        run: ls -R build

      - name: Setup Pages for deployment
        uses: actions/configure-pages@v5

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
